#!/usr/bin/env bash
set -e

cd "$(dirname "$0")"

_log() {
    echo -e "\\033[0;36m$*\\033[0m" >&2
}

# Show an ERROR: message on stderr
_error() {
    echo "\\033[1;91mERROR: $*\\033[0m" >&2
}

CONFIG_VARS=()

# Prompt a var via readline with a default
# $1 - Variable name
_ask_var() {
    local var_name=$1
    local default
    eval "default=\$$var_name"
    read -e -r -p "$var_name=" -i "$default" "$var_name"
    CONFIG_VARS+=("$var_name")
}

# Write config to stdout (> to file to save)
_write_config() {
    local var_name
    local var_value
    cat <<CONFIG_SH
#!/usr/bin/env bash
# cpuhue local configuration generated by setup.sh

CONFIG_SH
    for var_name in "${CONFIG_VARS[@]}"; do
        eval "var_value=\$$var_name"
        echo "$var_name='$var_value'"
    done
}

source defaults.sh

# if config.sh already exists, start by sourcing it for defaults
if [ -f config.sh ]; then
    _log "Loading Existing config.sh"
    source config.sh
fi

_ask_var HUE_BRIDGE_BASE

if ! curl --fail -I "$HUE_BRIDGE_BASE"; then
    _error "Failed to connect to '$HUE_BRIDGE_BASE'"
fi

_log "Do you have an existing username? Leave blank to create a new one"
_ask_var HUE_APP_USERNAME

if [ -z "$HUE_APP_USERNAME" ]; then
    _ask_var HUE_APP_NAME

    read -r -p "Press Link button on Hue Bridge now. Then hit Enter"

    HUE_APP_USERNAME=$(curl --fail -X POST -d '{"devicetype": "'"$HUE_APP_NAME"'"}' "$HUE_BRIDGE_BASE/api" | jq -r ".[0].success.username")
fi

curl --fail "$HUE_BRIDGE_BASE/api/$HUE_APP_USERNAME/lights" | jq

_log "Which light should be used?"
_ask_var HUE_LIGHT_ID

_log "Select CPU thresholds."
for cpu_thresh in HUE_CPU_IDLE HUE_CPU_LOW HUE_CPU_MED HUE_CPU_HIGH; do
    _ask_var "$cpu_thresh"
done

_write_config > config.sh
